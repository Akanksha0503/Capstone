{"name": "test_verify_order_status[chrome-1]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x75fe83+66515]\n\tGetHandleVerifier [0x0x75fec4+66580]\n\t(No symbol) [0x0x54dc48]\n\t(No symbol) [0x0x598704]\n\t(No symbol) [0x0x598aab]\n\t(No symbol) [0x0x5df482]\n\t(No symbol) [0x0x5bb214]\n\t(No symbol) [0x0x5dcba7]\n\t(No symbol) [0x0x5bafc6]\n\t(No symbol) [0x0x58c2ca]\n\t(No symbol) [0x0x58d154]\n\tGetHandleVerifier [0x0x9b73b3+2521347]\n\tGetHandleVerifier [0x0x9b2333+2500739]\n\tGetHandleVerifier [0x0x787cd4+229924]\n\tGetHandleVerifier [0x0x778238+165768]\n\tGetHandleVerifier [0x0x77eced+193085]\n\tGetHandleVerifier [0x0x768198+100072]\n\tGetHandleVerifier [0x0x768330+100480]\n\tGetHandleVerifier [0x0x7525ea+11066]\n\tBaseThreadInitThunk [0x0x76255d49+25]\n\tRtlInitializeExceptionChain [0x0x7788d6db+107]\n\tRtlGetAppContainerNamedObjectPath [0x0x7788d661+561]", "trace": "self = <Selenium_Ecommerce.tests.test_orders.TestOrdersModule object at 0x00000280944DBC50>, setup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"866e1d0d648e1e84375939f3cb27b8c9\")>\n\n    @pytest.fixture(autouse=True)\n    def setup_orders(self, setup):\n        self.driver = setup\n        self.orders_page = OrdersModule(self.driver)\n        self.driver.get(\"https://admin-demo.nopcommerce.com/login?ReturnUrl=%2Fadmin%2F\")\n    \n    \n    \n        # Login once before navigating to Products (demo admin creds)\n        from Selenium_Ecommerce.pages.LoginPage import LoginPage\n        login = LoginPage(self.driver)\n>       login.login(\"admin@yourstore.com\", \"admin\")\n\nSelenium_Ecommerce\\tests\\test_orders.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nSelenium_Ecommerce\\pages\\LoginPage.py:24: in login\n    self.enter_text(*self.EMAIL_FIELD, email)\nSelenium_Ecommerce\\modules\\BaseModule.py:58: in enter_text\n    element = WebDriverWait(self.driver, 10).until(EC.presence_of_element_located((by, locator)))\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"866e1d0d648e1e84375939f3cb27b8c9\")>, method = <function presence_of_element_located.<locals>._predicate at 0x00000280848D5B20>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x75fe83+66515]\nE       \tGetHandleVerifier [0x0x75fec4+66580]\nE       \t(No symbol) [0x0x54dc48]\nE       \t(No symbol) [0x0x598704]\nE       \t(No symbol) [0x0x598aab]\nE       \t(No symbol) [0x0x5df482]\nE       \t(No symbol) [0x0x5bb214]\nE       \t(No symbol) [0x0x5dcba7]\nE       \t(No symbol) [0x0x5bafc6]\nE       \t(No symbol) [0x0x58c2ca]\nE       \t(No symbol) [0x0x58d154]\nE       \tGetHandleVerifier [0x0x9b73b3+2521347]\nE       \tGetHandleVerifier [0x0x9b2333+2500739]\nE       \tGetHandleVerifier [0x0x787cd4+229924]\nE       \tGetHandleVerifier [0x0x778238+165768]\nE       \tGetHandleVerifier [0x0x77eced+193085]\nE       \tGetHandleVerifier [0x0x768198+100072]\nE       \tGetHandleVerifier [0x0x768330+100480]\nE       \tGetHandleVerifier [0x0x7525ea+11066]\nE       \tBaseThreadInitThunk [0x0x76255d49+25]\nE       \tRtlInitializeExceptionChain [0x0x7788d6db+107]\nE       \tRtlGetAppContainerNamedObjectPath [0x0x7788d661+561]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "description": "Enter Order ID, click Go, and assert order status.", "parameters": [{"name": "setup", "value": "'chrome'"}, {"name": "order_id", "value": "'1'"}], "start": 1760868532366, "stop": 1760868532366, "uuid": "6ae01109-1047-48f9-aae6-b190bdbd093b", "historyId": "66dad7d7cb50a4f594edef69e4d661e6", "testCaseId": "ff4ed8aaf47970f44ba738fadf8f3bd6", "fullName": "tests.test_orders.TestOrdersModule#test_verify_order_status", "labels": [{"name": "feature", "value": "Orders Module"}, {"name": "story", "value": "Verify Order Status (Cancelled / Pending / Processing / Complete)"}, {"name": "severity", "value": "critical"}, {"name": "tag", "value": "orders"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_orders"}, {"name": "subSuite", "value": "TestOrdersModule"}, {"name": "host", "value": "ASCENDI-FJC3FA0"}, {"name": "thread", "value": "2984-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_orders"}], "titlePath": ["tests", "test_orders.py", "TestOrdersModule"]}