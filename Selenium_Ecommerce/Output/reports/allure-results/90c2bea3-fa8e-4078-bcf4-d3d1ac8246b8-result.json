{"name": "test_add_customer[firefox-case1]", "status": "failed", "statusDetails": {"message": "AssertionError: Unexpected alert: None\nassert None in ['success', 'exists']", "trace": "self = <Selenium_Ecommerce.tests.test_custadd.TestAddCustomer object at 0x0000020EB0CCE2C0>\ncase = {'email': 'jane@example.com', 'first_name': 'Jane', 'last_name': 'Smith', 'password': 'password123'}\n\n    @pytest.mark.parametrize(\"case\", load_test_data(\"Selenium_Ecommerce/utils/data/customer_data.csv\"))\n    @allure.story(\"Add Customer via File Data (CSV/XLSX/XML)\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_add_customer(self, case):\n        \"\"\"\n        Adds new customers using input data from external test files.\n        Automatically captures screenshots and attaches to Allure.\n        \"\"\"\n        first_name, last_name, email, password = (\n            case[\"first_name\"], case[\"last_name\"], case[\"email\"], case[\"password\"]\n        )\n    \n        with allure.step(f\"Adding customer: {first_name} {last_name} ({email})\"):\n            result = self.add_page.add_customer(first_name, last_name, email, password)\n            if not result:\n                self.add_page.take_screenshot(\"test_custadd\", f\"add_fail_{email}\")\n            assert result, f\"Failed to fill or submit Add Customer form for {email}\"\n    \n        with allure.step(\"Validating alert after customer creation\"):\n            alert = self.add_page.get_alert_message()\n            if alert not in [\"success\", \"exists\"]:\n                self.add_page.take_screenshot(\"test_custadd\", f\"unexpected_{email}\")\n>           assert alert in [\"success\", \"exists\"], f\"Unexpected alert: {alert}\"\nE           AssertionError: Unexpected alert: None\nE           assert None in ['success', 'exists']\n\nSelenium_Ecommerce\\tests\\test_custadd.py:99: AssertionError"}, "description": "\nAdds new customers using input data from external test files.\nAutomatically captures screenshots and attaches to Allure.\n", "steps": [{"name": "Adding customer: Jane Smith (jane@example.com)", "status": "passed", "start": 1761137601867, "stop": 1761137605955}, {"name": "Validating alert after customer creation", "status": "failed", "statusDetails": {"message": "AssertionError: Unexpected alert: None\nassert None in ['success', 'exists']\n", "trace": "  File \"C:\\Users\\Ascendion\\PycharmProjects\\Capstone Project\\Selenium_Ecommerce\\tests\\test_custadd.py\", line 99, in test_add_customer\n    assert alert in [\"success\", \"exists\"], f\"Unexpected alert: {alert}\"\n"}, "start": 1761137605955, "stop": 1761137628331}], "parameters": [{"name": "setup", "value": "'firefox'"}, {"name": "case", "value": "{'first_name': 'Jane', 'last_name': 'Smith', 'email': 'jane@example.com', 'password': 'password123'}"}], "start": 1761137601867, "stop": 1761137628335, "uuid": "97c0730f-2b74-485f-b1a4-6434142478d5", "historyId": "2b47ccfa3d24b90e93303cd5764561c0", "testCaseId": "0f0e29d4fbcffafd15697f64a089dfe5", "fullName": "tests.test_custadd.TestAddCustomer#test_add_customer", "labels": [{"name": "feature", "value": "Customer Module"}, {"name": "story", "value": "Add Customer via File Data (CSV/XLSX/XML)"}, {"name": "severity", "value": "critical"}, {"name": "tag", "value": "add_customer"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_custadd"}, {"name": "subSuite", "value": "TestAddCustomer"}, {"name": "host", "value": "ASCENDI-FJC3FA0"}, {"name": "thread", "value": "6440-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_custadd"}], "titlePath": ["tests", "test_custadd.py", "TestAddCustomer"]}