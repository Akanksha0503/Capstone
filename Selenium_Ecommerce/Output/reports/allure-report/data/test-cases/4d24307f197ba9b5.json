{"uid":"4d24307f197ba9b5","name":"test_login_ddt[chrome-case0]","fullName":"tests.test_login.TestLoginLogout#test_login_ddt","historyId":"d88ef7cf63e6463b6dfc5ad62172e6db","time":{"start":1761139990005,"stop":1761140022314,"duration":32309},"description":"\nAttempts to log in with each dataset entry.\nSupports multiple browsers and data formats.\n","descriptionHtml":"<p>Attempts to log in with each dataset entry.<br />\nSupports multiple browsers and data formats.</p>\n","status":"failed","statusMessage":"AssertionError: Expected success for admin@yourstore.com, but failed.\nassert 'none' == 'success'\n  \n  \u001B[0m\u001B[91m- success\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ none\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <Selenium_Ecommerce.tests.test_login.TestLoginLogout object at 0x0000020EB0DA5090>, case = {'email': 'admin@yourstore.com', 'expected': 'Pass', 'password': 'admin'}\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"74070ee0464f2b7cfbdf60817eb075c9\")>\n\n    @pytest.mark.parametrize(\"case\", load_test_data(\"Selenium_Ecommerce/utils/data/login_data.xml\"))\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.loginnop\n    @allure.story(\"Data Driven Login Test with Allure & Screenshots\")\n    def test_login_ddt(self, case, setup):\n        \"\"\"\n        Attempts to log in with each dataset entry.\n        Supports multiple browsers and data formats.\n        \"\"\"\n        # Extract fields from dataset\n        email, password, expected = case[\"email\"], case[\"password\"], case[\"expected\"]\n    \n        driver = setup\n        login_page = LoginPage(driver)\n        driver.get(\"https://admin-demo.nopcommerce.com/login?ReturnUrl=%2Fadmin%2F\")\n    \n        # Step: Attempt Login\n        with allure.step(f\"Testing login with: {email or '[EMPTY EMAIL]'} | Expected: {expected}\"):\n            result = login_page.login(email, password)\n            login_page.take_screenshot(\"test_login\", f\"attempt_{email or 'empty'}\")\n    \n    \n    \n        # Step: Validate Result — Successful Login\n        if expected == \"Pass\":\n            with allure.step(\"Verifying successful login outcome\"):\n>               assert result == \"success\", f\"Expected success for {email}, but failed.\"\nE               AssertionError: Expected success for admin@yourstore.com, but failed.\nE               assert 'none' == 'success'\nE                 \nE                 \u001B[0m\u001B[91m- success\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE                 \u001B[92m+ none\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nSelenium_Ecommerce\\tests\\test_login.py:64: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1761139978633,"stop":1761139990004,"duration":11371},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false}],"testStage":{"description":"\nAttempts to log in with each dataset entry.\nSupports multiple browsers and data formats.\n","status":"failed","statusMessage":"AssertionError: Expected success for admin@yourstore.com, but failed.\nassert 'none' == 'success'\n  \n  \u001B[0m\u001B[91m- success\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ none\u001B[39;49;00m\u001B[90m\u001B[39;49;00m","statusTrace":"self = <Selenium_Ecommerce.tests.test_login.TestLoginLogout object at 0x0000020EB0DA5090>, case = {'email': 'admin@yourstore.com', 'expected': 'Pass', 'password': 'admin'}\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"74070ee0464f2b7cfbdf60817eb075c9\")>\n\n    @pytest.mark.parametrize(\"case\", load_test_data(\"Selenium_Ecommerce/utils/data/login_data.xml\"))\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.loginnop\n    @allure.story(\"Data Driven Login Test with Allure & Screenshots\")\n    def test_login_ddt(self, case, setup):\n        \"\"\"\n        Attempts to log in with each dataset entry.\n        Supports multiple browsers and data formats.\n        \"\"\"\n        # Extract fields from dataset\n        email, password, expected = case[\"email\"], case[\"password\"], case[\"expected\"]\n    \n        driver = setup\n        login_page = LoginPage(driver)\n        driver.get(\"https://admin-demo.nopcommerce.com/login?ReturnUrl=%2Fadmin%2F\")\n    \n        # Step: Attempt Login\n        with allure.step(f\"Testing login with: {email or '[EMPTY EMAIL]'} | Expected: {expected}\"):\n            result = login_page.login(email, password)\n            login_page.take_screenshot(\"test_login\", f\"attempt_{email or 'empty'}\")\n    \n    \n    \n        # Step: Validate Result — Successful Login\n        if expected == \"Pass\":\n            with allure.step(\"Verifying successful login outcome\"):\n>               assert result == \"success\", f\"Expected success for {email}, but failed.\"\nE               AssertionError: Expected success for admin@yourstore.com, but failed.\nE               assert 'none' == 'success'\nE                 \nE                 \u001B[0m\u001B[91m- success\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\nE                 \u001B[92m+ none\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n\nSelenium_Ecommerce\\tests\\test_login.py:64: AssertionError","steps":[{"name":"Testing login with: admin@yourstore.com | Expected: Pass","time":{"start":1761139991280,"stop":1761140022292,"duration":31012},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false},{"name":"Verifying successful login outcome","time":{"start":1761140022292,"stop":1761140022301,"duration":9},"status":"failed","statusMessage":"AssertionError: Expected success for admin@yourstore.com, but failed.\nassert 'none' == 'success'\n  \n  \u001B[0m\u001B[91m- success\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n  \u001B[92m+ none\u001B[39;49;00m\u001B[90m\u001B[39;49;00m\n","statusTrace":"  File \"C:\\Users\\Ascendion\\PycharmProjects\\Capstone Project\\Selenium_Ecommerce\\tests\\test_login.py\", line 64, in test_login_ddt\n    assert result == \"success\", f\"Expected success for {email}, but failed.\"\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentsCount":0,"shouldDisplayMessage":true,"stepsCount":0,"attachmentStep":false}],"attachments":[{"uid":"5db070215364fb56","name":"log","source":"5db070215364fb56.txt","type":"text/plain","size":397}],"parameters":[],"hasContent":true,"attachmentsCount":1,"shouldDisplayMessage":true,"stepsCount":2,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1761140022338,"stop":1761140026138,"duration":3800},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false}],"labels":[{"name":"story","value":"Data Driven Login Test with Allure & Screenshots"},{"name":"feature","value":"Login Module"},{"name":"severity","value":"critical"},{"name":"tag","value":"loginnop"},{"name":"tag","value":"login"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLoginLogout"},{"name":"host","value":"ASCENDI-FJC3FA0"},{"name":"thread","value":"6440-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case","value":"{'email': 'admin@yourstore.com', 'password': 'admin', 'expected': 'Pass'}"},{"name":"setup","value":"'chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":["loginnop","login"]},"source":"4d24307f197ba9b5.json","parameterValues":["{'email': 'admin@yourstore.com', 'password': 'admin', 'expected': 'Pass'}","'chrome'"]}