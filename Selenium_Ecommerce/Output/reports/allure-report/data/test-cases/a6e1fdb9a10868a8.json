{"uid":"a6e1fdb9a10868a8","name":"test_add_customer[firefox-case1]","fullName":"tests.test_custadd.TestAddCustomer#test_add_customer","historyId":"2b47ccfa3d24b90e93303cd5764561c0","time":{"start":1761137601867,"stop":1761137628335,"duration":26468},"description":"\nAdds new customers using input data from external test files.\nAutomatically captures screenshots and attaches to Allure.\n","descriptionHtml":"<p>Adds new customers using input data from external test files.<br />\nAutomatically captures screenshots and attaches to Allure.</p>\n","status":"failed","statusMessage":"AssertionError: Unexpected alert: None\nassert None in ['success', 'exists']","statusTrace":"self = <Selenium_Ecommerce.tests.test_custadd.TestAddCustomer object at 0x0000020EB0CCE2C0>\ncase = {'email': 'jane@example.com', 'first_name': 'Jane', 'last_name': 'Smith', 'password': 'password123'}\n\n    @pytest.mark.parametrize(\"case\", load_test_data(\"Selenium_Ecommerce/utils/data/customer_data.csv\"))\n    @allure.story(\"Add Customer via File Data (CSV/XLSX/XML)\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_add_customer(self, case):\n        \"\"\"\n        Adds new customers using input data from external test files.\n        Automatically captures screenshots and attaches to Allure.\n        \"\"\"\n        first_name, last_name, email, password = (\n            case[\"first_name\"], case[\"last_name\"], case[\"email\"], case[\"password\"]\n        )\n    \n        with allure.step(f\"Adding customer: {first_name} {last_name} ({email})\"):\n            result = self.add_page.add_customer(first_name, last_name, email, password)\n            if not result:\n                self.add_page.take_screenshot(\"test_custadd\", f\"add_fail_{email}\")\n            assert result, f\"Failed to fill or submit Add Customer form for {email}\"\n    \n        with allure.step(\"Validating alert after customer creation\"):\n            alert = self.add_page.get_alert_message()\n            if alert not in [\"success\", \"exists\"]:\n                self.add_page.take_screenshot(\"test_custadd\", f\"unexpected_{email}\")\n>           assert alert in [\"success\", \"exists\"], f\"Unexpected alert: {alert}\"\nE           AssertionError: Unexpected alert: None\nE           assert None in ['success', 'exists']\n\nSelenium_Ecommerce\\tests\\test_custadd.py:99: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1761137568493,"stop":1761137580223,"duration":11730},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false},{"name":"login_fixture","time":{"start":1761137580223,"stop":1761137588341,"duration":8118},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false},{"name":"setup_add","time":{"start":1761137588342,"stop":1761137601866,"duration":13524},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false},{"name":"login_fixture","time":{"start":1761137920602,"stop":1761137930010,"duration":9408},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false}],"testStage":{"description":"\nAdds new customers using input data from external test files.\nAutomatically captures screenshots and attaches to Allure.\n","status":"failed","statusMessage":"AssertionError: Unexpected alert: None\nassert None in ['success', 'exists']","statusTrace":"self = <Selenium_Ecommerce.tests.test_custadd.TestAddCustomer object at 0x0000020EB0CCE2C0>\ncase = {'email': 'jane@example.com', 'first_name': 'Jane', 'last_name': 'Smith', 'password': 'password123'}\n\n    @pytest.mark.parametrize(\"case\", load_test_data(\"Selenium_Ecommerce/utils/data/customer_data.csv\"))\n    @allure.story(\"Add Customer via File Data (CSV/XLSX/XML)\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_add_customer(self, case):\n        \"\"\"\n        Adds new customers using input data from external test files.\n        Automatically captures screenshots and attaches to Allure.\n        \"\"\"\n        first_name, last_name, email, password = (\n            case[\"first_name\"], case[\"last_name\"], case[\"email\"], case[\"password\"]\n        )\n    \n        with allure.step(f\"Adding customer: {first_name} {last_name} ({email})\"):\n            result = self.add_page.add_customer(first_name, last_name, email, password)\n            if not result:\n                self.add_page.take_screenshot(\"test_custadd\", f\"add_fail_{email}\")\n            assert result, f\"Failed to fill or submit Add Customer form for {email}\"\n    \n        with allure.step(\"Validating alert after customer creation\"):\n            alert = self.add_page.get_alert_message()\n            if alert not in [\"success\", \"exists\"]:\n                self.add_page.take_screenshot(\"test_custadd\", f\"unexpected_{email}\")\n>           assert alert in [\"success\", \"exists\"], f\"Unexpected alert: {alert}\"\nE           AssertionError: Unexpected alert: None\nE           assert None in ['success', 'exists']\n\nSelenium_Ecommerce\\tests\\test_custadd.py:99: AssertionError","steps":[{"name":"Adding customer: Jane Smith (jane@example.com)","time":{"start":1761137601867,"stop":1761137605955,"duration":4088},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false},{"name":"Validating alert after customer creation","time":{"start":1761137605955,"stop":1761137628331,"duration":22376},"status":"failed","statusMessage":"AssertionError: Unexpected alert: None\nassert None in ['success', 'exists']\n","statusTrace":"  File \"C:\\Users\\Ascendion\\PycharmProjects\\Capstone Project\\Selenium_Ecommerce\\tests\\test_custadd.py\", line 99, in test_add_customer\n    assert alert in [\"success\", \"exists\"], f\"Unexpected alert: {alert}\"\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentsCount":0,"shouldDisplayMessage":true,"stepsCount":0,"attachmentStep":false}],"attachments":[],"parameters":[],"hasContent":true,"attachmentsCount":0,"shouldDisplayMessage":true,"stepsCount":2,"attachmentStep":false},"afterStages":[{"name":"login_fixture::0","time":{"start":1761137628502,"stop":1761137628502,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false},{"name":"setup::0","time":{"start":1761137628503,"stop":1761137633665,"duration":5162},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false},{"name":"login_fixture::0","time":{"start":1761137965297,"stop":1761137965297,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false}],"labels":[{"name":"feature","value":"Customer Module"},{"name":"story","value":"Add Customer via File Data (CSV/XLSX/XML)"},{"name":"severity","value":"critical"},{"name":"tag","value":"add_customer"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_custadd"},{"name":"subSuite","value":"TestAddCustomer"},{"name":"host","value":"ASCENDI-FJC3FA0"},{"name":"thread","value":"6440-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_custadd"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case","value":"{'first_name': 'Jane', 'last_name': 'Smith', 'email': 'jane@example.com', 'password': 'password123'}"},{"name":"setup","value":"'firefox'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":["add_customer"]},"source":"a6e1fdb9a10868a8.json","parameterValues":["{'first_name': 'Jane', 'last_name': 'Smith', 'email': 'jane@example.com', 'password': 'password123'}","'firefox'"]}