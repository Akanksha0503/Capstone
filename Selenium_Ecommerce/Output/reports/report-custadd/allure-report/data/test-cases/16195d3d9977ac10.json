{"uid":"16195d3d9977ac10","name":"test_add_customer[firefox-case1]","fullName":"tests.test_custadd.TestAddCustomer#test_add_customer","historyId":"2b47ccfa3d24b90e93303cd5764561c0","time":{"start":1760722592066,"stop":1760722615781,"duration":23715},"description":"\nAdds new customers using input data from external test files.\nAutomatically captures screenshots and attaches to Allure.\n","descriptionHtml":"<p>Adds new customers using input data from external test files.<br />\nAutomatically captures screenshots and attaches to Allure.</p>\n","status":"failed","statusMessage":"AssertionError: Failed to fill or submit Add Customer form for jane@example.com\nassert False","statusTrace":"self = <Selenium_Ecommerce.tests.test_custadd.TestAddCustomer object at 0x0000018991E068B0>\ncase = {'email': 'jane@example.com', 'first_name': 'Jane', 'last_name': 'Smith', 'password': 'password123'}\n\n    @pytest.mark.parametrize(\"case\", load_test_data(\"Selenium_Ecommerce/utils/data/customer_data.csv\"))\n    @allure.story(\"Add Customer via File Data (CSV/XLSX/XML)\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_add_customer(self, case):\n        \"\"\"\n        Adds new customers using input data from external test files.\n        Automatically captures screenshots and attaches to Allure.\n        \"\"\"\n        first_name, last_name, email, password = (\n            case[\"first_name\"], case[\"last_name\"], case[\"email\"], case[\"password\"]\n        )\n    \n        with allure.step(f\"Adding customer: {first_name} {last_name} ({email})\"):\n            result = self.add_page.add_customer(first_name, last_name, email, password)\n            if not result:\n                self.add_page.take_screenshot(\"test_custadd\", f\"add_fail_{email}\")\n>           assert result, f\"Failed to fill or submit Add Customer form for {email}\"\nE           AssertionError: Failed to fill or submit Add Customer form for jane@example.com\nE           assert False\n\nSelenium_Ecommerce\\tests\\test_custadd.py:93: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1760722458237,"stop":1760722554588,"duration":96351},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"login_fixture","time":{"start":1760722554588,"stop":1760722571195,"duration":16607},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"setup_add","time":{"start":1760722571195,"stop":1760722592063,"duration":20868},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"testStage":{"description":"\nAdds new customers using input data from external test files.\nAutomatically captures screenshots and attaches to Allure.\n","status":"failed","statusMessage":"AssertionError: Failed to fill or submit Add Customer form for jane@example.com\nassert False","statusTrace":"self = <Selenium_Ecommerce.tests.test_custadd.TestAddCustomer object at 0x0000018991E068B0>\ncase = {'email': 'jane@example.com', 'first_name': 'Jane', 'last_name': 'Smith', 'password': 'password123'}\n\n    @pytest.mark.parametrize(\"case\", load_test_data(\"Selenium_Ecommerce/utils/data/customer_data.csv\"))\n    @allure.story(\"Add Customer via File Data (CSV/XLSX/XML)\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_add_customer(self, case):\n        \"\"\"\n        Adds new customers using input data from external test files.\n        Automatically captures screenshots and attaches to Allure.\n        \"\"\"\n        first_name, last_name, email, password = (\n            case[\"first_name\"], case[\"last_name\"], case[\"email\"], case[\"password\"]\n        )\n    \n        with allure.step(f\"Adding customer: {first_name} {last_name} ({email})\"):\n            result = self.add_page.add_customer(first_name, last_name, email, password)\n            if not result:\n                self.add_page.take_screenshot(\"test_custadd\", f\"add_fail_{email}\")\n>           assert result, f\"Failed to fill or submit Add Customer form for {email}\"\nE           AssertionError: Failed to fill or submit Add Customer form for jane@example.com\nE           assert False\n\nSelenium_Ecommerce\\tests\\test_custadd.py:93: AssertionError","steps":[{"name":"Adding customer: Jane Smith (jane@example.com)","time":{"start":1760722592066,"stop":1760722615781,"duration":23715},"status":"failed","statusMessage":"AssertionError: Failed to fill or submit Add Customer form for jane@example.com\nassert False\n","statusTrace":"  File \"C:\\Users\\Ascendion\\PycharmProjects\\Capstone Project\\Selenium_Ecommerce\\tests\\test_custadd.py\", line 93, in test_add_customer\n    assert result, f\"Failed to fill or submit Add Customer form for {email}\"\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":1,"hasContent":true},"afterStages":[{"name":"login_fixture::0","time":{"start":1760722615895,"stop":1760722615895,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"setup::0","time":{"start":1760722615896,"stop":1760722622714,"duration":6818},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"labels":[{"name":"feature","value":"Customer Module"},{"name":"story","value":"Add Customer via File Data (CSV/XLSX/XML)"},{"name":"severity","value":"critical"},{"name":"tag","value":"add_customer"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_custadd"},{"name":"subSuite","value":"TestAddCustomer"},{"name":"host","value":"ASCENDI-FJC3FA0"},{"name":"thread","value":"3916-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_custadd"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case","value":"{'first_name': 'Jane', 'last_name': 'Smith', 'email': 'jane@example.com', 'password': 'password123'}"},{"name":"setup","value":"'firefox'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["add_customer"]},"source":"16195d3d9977ac10.json","parameterValues":["{'first_name': 'Jane', 'last_name': 'Smith', 'email': 'jane@example.com', 'password': 'password123'}","'firefox'"]}