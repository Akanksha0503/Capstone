name: Capstone Project Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  selenium-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chrome, firefox]

    steps:
      # 1Ô∏è‚É£ Checkout repo
      - uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup Python
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      # 3Ô∏è‚É£ Install dependencies
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r Selenium_Ecommerce/requirements.txt
          pip install pytest selenium webdriver-manager allure-pytest pytest-xdist pytest-html openpyxl

      # 4Ô∏è‚É£ Install browsers
      - name: Install Chrome & Firefox
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt-get install -y ./google-chrome-stable_current_amd64.deb
          google-chrome --version
          sudo snap install firefox

      # 5Ô∏è‚É£ Install Allure CLI
      - name: Install Allure CLI
        run: |
          sudo apt-get install -y wget unzip
          LATEST=$(curl -s https://api.github.com/repos/allure-framework/allure2/releases/latest \
                   | grep "browser_download_url.*zip" | cut -d '"' -f 4)
          wget -O allure.zip $LATEST
          unzip allure.zip -d /opt/allure
          sudo ln -s /opt/allure/*/bin/allure /usr/bin/allure
          allure --version

      - name: Install xvfb
        run: sudo apt-get install -y xvfb

      - name: Start Xvfb
        run: Xvfb :99 -screen 0 1920x1080x24 &

      - name: Run tests
        env:
          DISPLAY: :99
        run: |
          pytest Selenium_Ecommerce/tests/test_login.py -v -s 


#      # 6Ô∏è‚É£ Run Selenium tests
#      - name: Run Selenium tests
#
#        run: |
#          pytest Selenium_Ecommerce/tests/test_login.py -v -s --headless --browser ${{ matrix.browser }} --clean-alluredir --alluredir=Selenium_Ecommerce/Output/reports/report-login/allure-results --html=Selenium_Ecommerce/Output/reports/report-login/login_report.html

      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        with:
          name: test-screenshots
          path: Selenium_Ecommerce/Output/screenshots/test_login/

      # 7Ô∏è‚É£ Upload raw Allure results
      - name: Upload raw Allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ matrix.browser }}
          path: Selenium_Ecommerce/Output/reports/report-login/allure-results

      # 8Ô∏è‚É£ Upload HTML report
      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: pytest-html-${{ matrix.browser }}
          path: Selenium_Ecommerce/Output/reports/cust_search_report.html

      # 9Ô∏è‚É£ Generate Allure report
      - name: Generate Allure Report
        run: |
          allure generate Selenium_Ecommerce/Output/reports/report-login/allure-results \
            -o Selenium_Ecommerce/Output/reports/report-login/allure-report --clean

      # üîü Upload generated Allure report
      - name: Upload Allure report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-report-${{ matrix.browser }}
          path: Selenium_Ecommerce/Output/reports/report-login/allure-report
          retention-days: 7

  deploy-allure:
    needs: selenium-tests
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Allure report artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: ./allure-report

      - name: Deploy report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
