name: Capstone Project Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  selenium-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    strategy:
      matrix:
        browser: [chrome, edge, firefox]  # Chrome, Edge, Firefox

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
          pip install pytest selenium allure-pytest webdriver-manager pytest-xdist pytest-rerunfailures pytest-html openpyxl

      - name: Install Google Chrome
        if: matrix.browser == 'chrome'
        run: |
          sudo apt update
          sudo apt install -y google-chrome-stable

      - name: Install Microsoft Edge
        if: matrix.browser == 'edge'
        run: |
          sudo curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
          sudo mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg
          sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/edge stable main" > /etc/apt/sources.list.d/microsoft-edge.list'
          sudo apt update
          sudo apt install -y microsoft-edge-stable

      - name: Install Firefox
        if: matrix.browser == 'firefox'
        run: |
          sudo apt update
          sudo apt install -y firefox

      - name: Install Allure CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          LATEST_ALLURE_URL=$(curl -s https://api.github.com/repos/allure-framework/allure2/releases/latest | grep "browser_download_url.*zip" | cut -d '"' -f 4)
          echo "Downloading Allure from: $LATEST_ALLURE_URL"
          wget -O allure.zip "$LATEST_ALLURE_URL"
          unzip allure.zip -d /opt/allure
          sudo ln -s /opt/allure/*/bin/allure /usr/bin/allure
          allure --version

      - name: Run Selenium tests with HTML and Allure reports
        run: |
          pytest Selenium_Ecommerce/tests/test_login.py \
            -v -s \
            --headless \
            --browser ${{ matrix.browser }} \
            --clean-alluredir \
            --alluredir=Selenium_Ecommerce/Output/reports/report-login/allure-results \
            --html=Selenium_Ecommerce/Output/reports/report-login/login_report.html

      - name: Upload raw allure results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-results-${{ matrix.browser }}
          path: Selenium_Ecommerce/Output/reports/report-login/allure-results

      - name: Upload pytest HTML report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: pytest_html-report-${{ matrix.browser }}
          path: Selenium_Ecommerce/Output/reports/report-login/login_report.html
          retention-days: 30

      - name: Generate Allure Report
        run: |
          allure generate Selenium_Ecommerce/Output/reports/report-login/allure-results \
            -o Selenium_Ecommerce/Output/reports/report-login/allure-report --clean

      - name: Upload Allure report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-report-${{ matrix.browser }}
          path: Selenium_Ecommerce/Output/reports/report-login/allure-report
          retention-days: 7


  deploy-allure:
    needs: selenium-tests
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Allure report artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: ./allure-report

      - name: Deploy report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
