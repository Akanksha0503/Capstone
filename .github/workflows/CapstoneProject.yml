name: Capstone Project Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  selenium-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chrome, edge, firefox]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r Selenium_Ecommerce/requirements.txt
          pip install pytest selenium webdriver-manager allure-pytest pytest-xdist pytest-html openpyxl

      # Install browsers
      - name: Install Chrome and Firefox
        run: |
          sudo apt update
          sudo apt install -y google-chrome-stable firefox

      # Install Microsoft Edge & EdgeDriver
      - name: Install Edge (browser + driver)
        if: matrix.browser == 'edge'
        run: |
          sudo apt update
          sudo apt install -y software-properties-common apt-transport-https wget unzip
          wget -q https://packages.microsoft.com/keys/microsoft.asc -O- | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://packages.microsoft.com/repos/edge stable main"
          sudo apt update
          sudo apt install -y microsoft-edge-stable
          EDGE_VERSION=$(microsoft-edge --version | awk '{print $3}')
          wget https://msedgedriver.azureedge.net/$EDGE_VERSION/edgedriver_linux64.zip
          unzip edgedriver_linux64.zip
          sudo mv msedgedriver /usr/bin/msedgedriver
          msedgedriver --version
      
      
      

      - name: Install Allure CLI
        run: |
          sudo apt-get install -y wget unzip
          LATEST=$(curl -s https://api.github.com/repos/allure-framework/allure2/releases/latest | grep "browser_download_url.*zip" | cut -d '"' -f 4)
          wget -O allure.zip $LATEST
          unzip allure.zip -d /opt/allure
          sudo ln -s /opt/allure/*/bin/allure /usr/bin/allure
          allure --version

      - name: Run Selenium tests
        run: |
          pytest Selenium_Ecommerce/tests/test_login.py \
            -v -s \
            --headless \
            --browser ${{ matrix.browser }} \
            --clean-alluredir \
            --alluredir=Selenium_Ecommerce/Output/reports/allure-results \
            --html=Selenium_Ecommerce/Output/reports/login_report.html

      - name: Upload raw allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ matrix.browser }}
          path: Selenium_Ecommerce/Output/reports/allure-results

      - name : Upload html report
        uses: actions/upload-artifact@v4
        with:
          name: pytest-html-${{ matrix.browser }}
          path: Selenium_Ecommerce/Output/reports/login_report.html


      - name: Generate Allure Report
        run: |
          allure generate Selenium_Ecommerce/Output/reports/report-login/allure-results \
            -o Selenium_Ecommerce/Output/reports/report-login/allure-report --clean

      - name: Upload Allure report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-report-${{ matrix.browser }}
          path: Selenium_Ecommerce/Output/reports/report-login/allure-report
          retention-days: 7


  deploy-allure:
    needs: selenium-tests
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Allure report artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: ./allure-report

      - name: Deploy report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
